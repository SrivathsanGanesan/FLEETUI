
  

  /* Container to center the dropdown */
  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: -5px;
    background-color: #ffffff;
  }
  .dropdown-container {
    display: flex;
    justify-content: left;
    margin-bottom: 5px;
    position: relative; /* Position relative for the dropdown arrow */
  }
  
  .menu {
    font-size: 14px;
    line-height: 1.6;
    color: #ffffff; /* Default font color changed to violet */
    width: fit-content;
    display: flex;
    list-style: none;
  }
  
  .menu a {
    text-decoration: none;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
  }
  
  .menu .link {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    padding: 8px 24px;
    border-radius: 10px;
    overflow: hidden;
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
    background: linear-gradient(45deg, #f1494e, #DA2127); /* Gradient background */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); /* Button-like shadow */
    cursor: pointer;
    width: 200px; /* Fixed width for the dropdown button */
    text-align: center; /* Center the text inside the button */
  }
  
  .menu .link::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #DA2127; /* Violet color */
    z-index: -1;
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.48s cubic-bezier(0.23, 1, 0.32, 1);
  }
  
  /* Arrow color */
  .menu .link svg {
    width: 14px;
    height: 14px;
    
    fill: #ffffff; /* Violet color for the arrow */
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
  }
  
  .menu .item {
    position: relative;
    width: 100%; /* Ensure the width of the item is 100% to align with the button */
  }
  
  .menu .item .submenu {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: absolute;
    top: 100%;
    border-radius: 5px 5px 16px 16px;
    left: 0;
    width: 100%;
    overflow: hidden;
    border: 1px solid #cccccc;
    background: linear-gradient(45deg, #ffffff, #f0f0f0); /* Gradient background */
    opacity: 0;
    visibility: hidden;
    transform: translateY(-12px);
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
    z-index: 1;
    pointer-events: none;
    list-style: none;
    width: 200px; /* Fixed width for the submenu matching the button */
  }
  
  .menu .item:hover .submenu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
    pointer-events: auto;
    border-top: transparent;
    border-color: #DA2127; /* Violet color */
    width: 200px; /* Ensure the dropdown width matches the button's width */
  }
  
  .menu .item:hover .link {
    color: #ffffff;
    border-radius: 16px 16px 5px 5px;
  }
  
  .menu .item:hover .link::after {
    transform: scaleX(1);
    transform-origin: right;
  }
  
  .menu .item:hover .link svg {
    fill: #ffffff;
    transform: rotate(-180deg);
  }
  
  .submenu .submenu-item {
    width: 100%;
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
  }
  
  .submenu .submenu-link {
    display: block;
    padding: 12px 24px;
    width: 100%;
    position: relative;
    text-align: left; /* Aligning the dropdown data to the left */
    color: #DA2127; /* Violet font color for dropdown items */
    transition: all 0.48s cubic-bezier(0.23, 1, 0.32, 1);
    box-sizing: border-box; /* Include padding in the element's total width */
    width: 100%; /* Match the width of the parent item */
  }
  
  .submenu .submenu-item:last-child .submenu-link {
    border-bottom: none;
  }
  
  .submenu .submenu-link::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    transform: scaleX(0);
    width: 100%;
    height: 100%;
    background-color: #DA2127;
    z-index: -1;
    transform-origin: left;
    transition: transform 0.48s cubic-bezier(0.23, 1, 0.32, 1);
  }
  
  .submenu .submenu-link:hover:before {
    transform: scaleX(1);
    transform-origin: right;
  }
  
  .submenu .submenu-link:hover {
    color: #ffffff; /* White text color on hover */
  }
  
  
 /* Reset default browser focus styles */
.input:focus {
  outline: none;
  box-shadow: none;
}

.body {
  --radius: 8px;
  --border: 4px;
  --height: 38px;
  --speed: 0.25s;
  display: grid;
  justify-content: end;
  align-items: center;
  font-family: "SF Pro Text", "SF Pro Icons", "AOS Icons", "Helvetica Neue",
    Helvetica, Arial, sans-serif, system-ui;
}

.tabs {
  height: var(--height);
  display: grid;
  grid-auto-flow: column;
  background: hsl(0 100% 50%); /* Red background for the tabs */
  border-radius: var(--radius);
  grid-auto-columns: 1fr;
  position: relative;
  border: var(--border) solid hsl(0 100% 50%); /* Red border for tabs */
}

.tabs > .input,
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.tabs:has(:checked:nth-of-type(1)) {
  --active: 0;
}

.tabs:has(:checked:nth-of-type(2)) {
  --active: 1;
}

.tabs:has(:checked:nth-of-type(3)) {
  --active: 2;
}

.tabs:has(:checked:nth-of-type(4)) {
  --active: 3;
}

.tabs:has(.input:nth-of-type(2)) {
  --count: 2;
}

.tabs:has(.input:nth-of-type(3)) {
  --count: 3;
}

.tabs:has(.input:nth-of-type(4)) {
  --count: 4;
}

/* Active tab styling */
.tabs :checked + .label {
  background: hsl(0 0% 100%); /* White background for the active tab */
  color: hsl(0 100% 50%); /* Red font for the active tab */
  border-radius: calc(var(--radius) - var(--border));
  border: 2px solid hsl(0 100% 50%);
}

/* Hover effect on inactive tabs */
.input:not(:checked) + .label:hover {
  background: hsl(0 80% 50%); /* Slightly darker red for hover effect */
  color: white;
}

.tabs .label {
  padding: 0 clamp(10px, 10px + 10px, 20px);
  cursor: pointer;
  text-align: center;
  height: 100%;
  display: grid;
  place-items: center;
  color: white; /* White font for inactive tabs */
  background: hsl(0 100% 50%); /* Red background for inactive tabs */
  transition: background, color, border;
  transition-duration: 0.25s;
  transition-timing-function: ease;
}

.tabs::after {
  pointer-events: none;
  content: "";
  width: calc(100% / var(--count));
  height: 100%;
  background: hsl(0 100% 50%); /* Red background for the indicator */
  position: absolute;
  border-radius: calc(var(--radius) - var(--border));
  translate: calc(var(--active, 0) * 100%) 0;
  transition: translate 0.25s ease;
  outline: 2px solid transparent;
}

.tabs:has(:focus-visible)::after {
  outline-color: red;
}
